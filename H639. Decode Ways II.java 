class Solution {
    public int numDecodings(String s) {
        long[] dp = new long[s.length()+1];
        long mod = 1000000007;
        if (s.charAt(0) == '0') return 0;
        dp[0] = 1;
        dp[1] = (s.charAt(0) == '*'?9:1);
        for (int i = 2; i <= s.length(); i++) {
            if (s.charAt(i-1) == '*') {
                dp[i] = (9*dp[i-1])%mod;
                if (s.charAt(i-2) == '1') {
                    dp[i] = (dp[i]+9*dp[i-2])%mod;
                } 
                if (s.charAt(i-2) == '2') {
                    dp[i] = (dp[i]+6*dp[i-2])%mod;
                }
                if (s.charAt(i-2) == '*') {
                    dp[i] = (dp[i]+15*dp[i-2])%mod;
                }
            }
            else {
                if (s.charAt(i-2) != '*') {
                    int first = Integer.valueOf(s.substring(i-1, i));
                    int second = Integer.valueOf(s.substring(i-2, i));
                    if (first >= 1 && first <= 9) dp[i] = (dp[i]+dp[i-1])%mod;
                    if (second >= 10 && second <= 26) dp[i] = (dp[i]+dp[i-2])%mod;
                } else {
                    int first = Integer.valueOf(s.substring(i-1, i));
                    if (first >= 1 && first <= 9) dp[i] = (dp[i]+dp[i-1])%mod;
                    if (first >= 0 && first <= 6) dp[i] = (dp[i]+2*dp[i-2])%mod;
                    else if (first > 6) dp[i]= (dp[i]+dp[i-2])%mod;
                }
            }
        }
        return (int)(dp[s.length()]%mod);
    }
}